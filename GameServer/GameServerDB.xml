<?xml version="1.0" encoding="utf-8"?>

<GameServerDB>
  <!-- 플레이어 테이블 -->
  <Table name="Player" desc="Player Table">
    <Column name="PlayerDBId" type="BigInt" notnull="true" identity="1,1"/>
    <Column name="AccountDBId" type="BigInt" notnull="true"/>
    <Column name="PlayerName" type="nvarchar(20)" notnull="true"/>
    <Column name="PlayerType" type="SmallInt" notnull="true"/>
    <Column name="PlayerIndex" type="TinyInt" notnull="true"/>
    <Column name="Level" type="int" notnull="true"/>
    <Column name="CurrentHP" type="int" notnull="true"/>
    <Column name="MaxHP" type="int" notnull="true"/>
    <Column name="CurrentMP" type="int" notnull="true"/>
    <Column name="MaxMP" type="int" notnull="true"/>
    <Column name="CurrentDP" type="int" notnull="true"/>
    <Column name="MaxDP" type="int" notnull="true"/>
    <Column name="AutoRecoveryHPPercent" type="SmallInt" notnull="true"/>
    <Column name="AutoRecoveryMPPercent" type="SmallInt" notnull="true"/>
    <Column name="MinMeleeAttackDamage" type="int" notnull="true"/>
    <Column name="MaxMeleeAttackDamage" type="int" notnull="true"/>
    <Column name="MeleeAttackHitRate" type="SmallInt" notnull="true"/>
    <Column name="MagicDamage" type="SmallInt" notnull="true"/>
    <Column name="MagicHitRate" type="float" notnull="true"/>
    <Column name="Defence" type="int" notnull="true"/>
    <Column name="EvasionRate" type="SmallInt" notnull="true"/>
    <Column name="MeleeCriticalPoint" type="SmallInt" notnull="true"/>
    <Column name="MagicCriticalPoint" type="SmallInt" notnull="true"/>
    <Column name="Speed" type="float" notnull="true"/>
    <Column name="LastPositionY" type="int" notnull="true"/>
    <Column name="LastPositionX" type="int" notnull="true"/>
    <Column name="CurrentExperience" type="BigInt" notnull="true"/>
    <Column name="RequireExperience" type="BigInt" notnull="true"/>
    <Column name="TotalExperience" type="BigInt" notnull="true"/>
    <Index type="clustered"> 
      <PrimaryKey/>
      <Column name="PlayerDBId"/>
    </Index>    
    <Index type="nonclustered">
      <UniqueKey/>
      <Column name="PlayerName"/>
    </Index>
  </Table>
  
  <!-- 아이템 테이블 -->
  <Table name="Item" desc="Item Table">
    <Column name="ItemDBId" type="BigInt" notnull="true" identity="10000000,1"/>
    <Column name="IsQuickSlotUse" type="bit"/>
	<Column name="ItemRotated" type="bit"/>
	<Column name="ItemWidth" type="SmallInt"/>
	<Column name="ItemHeight" type="SmallInt"/>  	
    <Column name="ItemUse" type="bit" notnull="true"/>
    <Column name="ItemLargeCategory" type="TinyInt" notnull="true"/>
    <Column name="ItemMediumCategory" type="TinyInt" notnull="true"/>
    <Column name="ItemSmallCategory" type="SmallInt" notnull="true"/>    
    <Column name="ItemName" type="nvarchar(20)" notnull="true"/>    
    <Column name="ItemCount" type="SmallInt" notnull="true"/>
    <Column name="IsEquipped" type="bit"/>
    <Column name="MinDamage" type="int"/>
    <Column name="MaxDamage" type="int"/>
    <Column name="Defence" type="int"/>
    <Column name="MaxCount" type="int"/>        
    <Index type="clustered">
      <PrimaryKey/>
      <Column name="ItemDBId"/>
    </Index>    
  </Table>
  
  <!-- 인벤토리 아이템 테이블 -->
  <Table name="Inventory" desc="Inventory Table">
    <Column name="IsQuickSlotUse" type="bit"/>
	<Column name="ItemRotated" type="bit"/>
	<Column name="ItemWidth" type="SmallInt"/>
	<Column name="ItemHeight" type="SmallInt"/>  
	<Column name="ItemTileGridPositionX" type="SmallInt"/>
	<Column name="ItemTileGridPositionY" type="SmallInt"/>
    <Column name="ItemLargeCategory" type="TinyInt" notnull="true"/>
    <Column name="ItemMediumCategory" type="TinyInt" notnull="true"/>
    <Column name="ItemSmallCategory" type="SmallInt" notnull="true"/>    
    <Column name="ItemName" type="nvarchar(20)" notnull="true"/>
    <Column name="ItemCount" type="SmallInt" notnull="true"/>    
    <Column name="IsEquipped" type="bit"/>
    <Column name="MinDamage" type="int"/>
    <Column name="MaxDamage" type="int"/>
    <Column name="Defence" type="int"/>
    <Column name="MaxCount" type="int"/>    
    <Column name="OwnerAccountDBId" type="BigInt" notnull="true"/>
    <Column name="OwnerPlayerDBId" type="BigInt" notnull="true"/>        
  </Table>

  <!-- 골드 테이블 -->
  <Table name="Gold" desc="Gold Table">
    <Column name="AccountDBId" type="BigInt" notnull="true"/>
    <Column name="PlayerDBId" type="BigInt" notnull="true"/>
    <Column name="GoldCoin" type="BigInt" notnull="true"/>
    <Column name="SliverCoin" type="SmallInt" notnull="true"/>
    <Column name="BronzeCoin" type="SmallInt" notnull="true"/>
    <Index type="clustered">
      <PrimaryKey/>
      <Column name="PlayerDBId"/>
    </Index>
  </Table>

  <!-- 보유중인 스킬 테이블 -->
  <Table name="Skill" desc="Skill Table">
    <Column name="AccountDBId" type="BigInt" notnull ="true"/>
    <Column name="PlayerDBId" type="BigInt"  notnull ="true"/>
	<Column name="IsSkillLearn" type="bit" notnull="true"/>
    <Column name="IsQuickSlotUse" type="bit" notnull ="true"/>
    <Column name="SkillLargeCategory" type="TinyInt" notnull="true"/>
    <Column name="SkillMediumCategory" type="TinyInt" noutnull="true"/>
    <Column name="SkillType" type="SmallInt" notnull ="true"/>
    <Column name="SkillLevel" type="TinyInt" notnull ="true"/>    
  </Table>
  
  <!-- 보유중인 퀵슬롯바 목록 테이블 -->
  <Table name="QuickSlotBar" desc="QuickSlotBar Table">
    <Column name="AccountDBId" type="BigInt" notnull ="true"/>
    <Column name="PlayerDBId" type="BigInt" notnull ="true"/>
    <Column name="QuickSlotBarIndex" type="TinyInt" notnull ="true"/>
    <Column name="QuickSlotBarSlotIndex" type="TinyInt" notnull ="true"/>
    <Column name="QuickSlotKey" type="SmallInt"/>
    <Column name="SkillLargeCategory" type="TinyInt"/>
    <Column name="SkillMediumCategory" type="TinyInt"/>
    <Column name="SkillType" type="SmallInt"/>
    <Column name="SkillLevel" type="TinyInt"/>            
  </Table>  
   
  <!-- 농작물 테이블 -->
	<Table name="Crop" desc="Crop Table">
	 <Column name="OwnerAccountDBId" type="BigInt" notnull ="true"/>
	 <Column name="OwnerPlayerDBId" type="BigInt" notnull ="true"/>
	 <Column name="CropCategory" type="SmallInt" notnull ="true"/>
	 <Column name="CropStep" type="TinyInt" notnull ="true"/>
	 <Column name="CropCount" type="SmallInt" notnull="true"/>	
	 <Column name="LastPositionY" type="int" notnull="true"/>
	 <Column name="LastPositionX" type="int" notnull="true"/>
	 <Column name="CropCreateTime" type="DateTime" notnull="true"/>
	</Table>
	
  <!-- AccountID를 기준으로 클라가 소유하고 있는 캐릭터를 찾는다. -->
  <Procedure name="spGetPlayers">
    <Param name="@AccountId" type="BigInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT PlayerDBId,
        PlayerName,
        PlayerType,
        PlayerIndex,
        Level,
        CurrentHP,
        MaxHP,
        CurrentMP, 
        MaxMP,
        CurrentDP,
        MaxDP,
        AutoRecoveryHPPercent,
        AutoRecoveryMPPercent,
        MinMeleeAttackDamage,
        MaxMeleeAttackDamage,
        MeleeAttackHitRate,
        MagicDamage,
        MagicHitRate,
        Defence,
        EvasionRate,
        MeleeCriticalPoint,
        MagicCriticalPoint,
        Speed, 
        LastPositionY,
        LastPositionX,
        CurrentExperience,
        RequireExperience, 
        TotalExperience 
        FROM [dbo].[Player] WHERE AccountDBId = (@AccountId)
      ]]>
    </Body>
  </Procedure>

  <!-- 입력한 캐릭터의 이름이 DB에 있는지 확인한다. -->
  <Procedure name="spGetCharacterName">
    <Param name="@CharacterName" type="nvarchar(20)"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT * FROM [dbo].[Player] WHERE EXISTS (SELECT PlayerName FROM [dbo].[Player] WHERE PlayerName = (@CharacterName))
      ]]>
    </Body>
  </Procedure>

  <!-- 새로운 캐릭터 DB에 넣기 -->
  <Procedure name="spNewCharacterPush">
    <Param name="@AccountId" type="BigInt"/>
    <Param name="@PlayerName" type="nvarchar(20)"/>
    <Param name="@PlayerType" type="SmallInt"/>
    <Param name="@PlayerIndex" type="TinyInt"/>
    <Param name="@Level" type="int"/>
    <Param name="@CurrentHP" type="int"/>
    <Param name="@MaxHP" type="int"/>
    <Param name="@CurrentMP" type="int"/>
    <Param name="@MaxMP" type="int"/>
    <Param name="@CurrentDP" type="int"/>
    <Param name="@MaxDP" type="int"/>
    <Param name="@AutoRecoveryHPPercent" type="SmallInt"/>
    <Param name="@AutoRecoveryMPPercent" type="SmallInt"/>
    <Param name="@MinMeleeAttackDamage" type="int"/>
    <Param name="@MaxMeleeAttackDamage" type="int"/>
    <Param name="@MeleeAttackHitRate" type="SmallInt"/>
    <Param name="@MagicDamage" type="SmallInt"/>
    <Param name="@MagicHitRate" type="float"/>
    <Param name="@Defence" type="int"/>
    <Param name="@EvasionRate" type="SmallInt"/>
    <Param name="@MeleeCriticalPoint" type="SmallInt"/>
    <Param name="@MagicCriticalPoint" type="SmallInt"/>
    <Param name="@Speed" type="float"/>
    <Param name="@LastPositionY" type="int"/>
    <Param name="@LastPositionX" type="int"/>
    <Param name="@CurrentExperience" type="BigInt"/>
    <Param name="@RequireExperience" type="BigInt"/>
    <Param name="@TotalExperience" type="BigInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        INSERT INTO [dbo].[Player]
        VALUES (
        (@AccountId),
        (@PlayerName),
        (@PlayerType),
        (@PlayerIndex),
        (@Level),
        (@CurrentHP),
        (@MaxHP),
        (@CurrentMP),
        (@MaxMP),
        (@CurrentDP),
        (@MaxDP),
        (@AutoRecoveryHPPercent),
        (@AutoRecoveryMPPercent),
        (@MinMeleeAttackDamage),
        (@MaxMeleeAttackDamage),
        (@MeleeAttackHitRate),
        (@MagicDamage),
        (@MagicHitRate),
        (@Defence),
        (@EvasionRate),
        (@MeleeCriticalPoint),
        (@MagicCriticalPoint),
        (@Speed),
        (@LastPositionY),
        (@LastPositionX),
        (@CurrentExperience),
        (@RequireExperience),
        (@TotalExperience))        
      ]]>
    </Body>
  </Procedure>

  <!-- 만든 캐릭터 DBId 가져오기 -->
  <Procedure name="spPlayerDBIdGet">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerIndex" type="TinyInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT PlayerDBId
        FROM [dbo].[Player]
        WHERE AccountDBId = (@AccountDBId) AND PlayerIndex = (@PlayerIndex)
      ]]>
    </Body>
  </Procedure>

  <!-- 골드 테이블 생성-->
  <Procedure name="spGoldTableCreate">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        INSERT INTO [dbo].[Gold] VALUES ((@AccountDBId),(@PlayerDBId),(0),(0),(0))
      ]]>
    </Body>
  </Procedure>
  
  <!-- 골드 테이블에 골드 저장 -->
  <Procedure name="spGoldSave">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>    
    <Param name="@GoldCount" type="BigInt"/>
    <Param name="@SliverCount" type="SmallInt"/>
    <Param name="@BronzeCount" type="SmallInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[Gold]
        SET GoldCoin = (@GoldCount), SliverCoin = (@SliverCount), BronzeCoin = (@BronzeCount)
        WHERE AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>    
  </Procedure>

  <!-- 골드 테이블에 저장되어 있는 정보 긁어오기 -->
  <Procedure name="spGetGoldTableInfoToInventory">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT GoldCoin, SliverCoin, BronzeCoin
        FROM [dbo].[Gold]
        WHERE AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure>
	
  <!-- 만든 아이템 DBId 가져오기 -->
  <Procedure name="spItemDBIdGet">
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT IDENT_CURRENT('Item')
      ]]>
    </Body>
  </Procedure>
  
  <!-- 인벤토리 테이블 빈껍데기 아이템 정보 생성-->  
  <Procedure name="spItemToInventoryInit">
    <Param name="@ItemName" type="nvarchar(20)"/>    
	<Param name="@ItemTileGridPositionX" type ="SmallInt"/>
	<Param name="@ItemTileGridPositionY" type ="SmallInt"/>		      
    <Param name="@OwnerAccountDBId" type="BigInt"/>
    <Param name="@OwnerPlayerDBId" type="BigInt"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        INSERT INTO [dbo].[Inventory]
        VALUES (0, 0, 0, 0, (@ItemTileGridPositionX), (@ItemTileGridPositionY), 0, 0, 0, (@ItemName), 0, 0, 0, 0, 0, 0, (@OwnerAccountDBId), (@OwnerPlayerDBId))
      ]]>
    </Body>
  </Procedure> 
  
  <!-- 인벤토리 테이블에 새로운 아이템 저장 -->
  <Procedure name="spItemToInventorySave">
    <Param name="@IsQuickSlotUse" type="bit"/>
	<Param name="@ItemRotated" type="bit"/>
	<Param name="@ItemWidth" type="SmallInt"/>
	<Param name="@ItemHeight" type="SmallInt"/>  
	<Param name="@ItemTileGridPositionX" type="SmallInt"/>
	<Param name="@ItemTileGridPositionY" type="SmallInt"/>
    <Param name="@ItemLargeCategory" type="TinyInt" notnull="true"/>
    <Param name="@ItemMediumCategory" type="TinyInt" notnull="true"/>
    <Param name="@ItemSmallCategory" type="SmallInt"/>    
    <Param name="@ItemName" type="nvarchar(20)"/>
    <Param name="@ItemMinDamage" type="int"/>
    <Param name="@ItemMaxDamage" type="int"/>
    <Param name="@ItemDefence" type="int"/>
    <Param name="@ItemMaxCount" type="int"/>
    <Param name="@ItemCount" type="SmallInt"/>        
    <Param name="@IsEquipped" type="bit"/>        
    <Param name="@OwnerAccountDBId" type="BigInt"/>
    <Param name="@OwnerPlayerDBId" type="BigInt"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[Inventory] 
        SET IsQuickSlotUse = (@IsQuickSlotUse),
		ItemRotated = (@ItemRotated),
		ItemWidth = (@ItemWidth),
		ItemHeight = (@ItemHeight),
		ItemTileGridPositionX = (@ItemTileGridPositionX),
		ItemTileGridPositionY = (@ItemTileGridPositionY),
		ItemLargeCategory = (@ItemLargeCategory),
        ItemMediumCategory = (@ItemMediumCategory), ItemSmallCategory = (@ItemSmallCategory),
        ItemName = (@ItemName), ItemCount = (@ItemCount), IsEquipped = (@IsEquipped), 
        MinDamage = (@ItemMinDamage), MaxDamage = (@ItemMaxDamage),
        Defence = (@ItemDefence), MaxCount = (@ItemMaxCount)        
        WHERE ItemTileGridPositionX = (@ItemTileGridPositionX) AND ItemTileGridPositionY = (@ItemTileGridPositionY) AND OwnerAccountDBId = (@OwnerAccountDBId) AND OwnerPlayerDBId = (@OwnerPlayerDBId)        
      ]]>
    </Body>
  </Procedure> 
  
  <!-- 아이템 테이블에 아이템 갱신 -->
  <Procedure name="spItemRefreshCount">
    <Param name="@OwnerAccountDBId" type="BigInt"/>
    <Param name="@OwnerPlayerDBId" type="BigInt"/>
    <Param name="@ItemSmallCategory" type="SmallInt"/>
    <Param name="@ItemCount" type="SmallInt"/>
    <Param name="@ItemTileGridPositionX" type="SmallInt"/>
	<Param name="@ItemTileGridPositionY" type="SmallInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[Inventory]
        SET ItemCount = (@ItemCount)
        WHERE ItemSmallCategory = (@ItemSmallCategory) AND ItemTileGridPositionX = (@ItemTileGridPositionX) AND ItemTileGridPositionY = (@ItemTileGridPositionY) AND OwnerAccountDBId = (@OwnerAccountDBId) AND OwnerPlayerDBId = (@OwnerPlayerDBId)
      ]]>
    </Body>
  </Procedure>  
  
  <!-- 인벤토리 테이블에 아이템 있는지 확인 -->
  <Procedure name="spInventoryItemCheck">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDbId" type="BigInt"/>
    <Param name="@ItemTileGridPositionX" type="SmallInt"/>
	<Param name="@ItemTileGridPositionY" type="SmallInt"/>
    <Body>      
      <![CDATA[
	    SET NOCOUNT ON
        SELECT IsQuickSlotUse, ItemRotated, ItemWidth, ItemHeight, 
		ItemLargeCategory, ItemMediumCategory, ItemSmallCategory,
		ItemName,
		MinDamage, MaxDamage, Defence, MaxCount, ItemCount, IsEquipped
        FROM [dbo].[Inventory] 
        WHERE OwnerAccountDBId = (@AccountDBId) AND OwnerPlayerDBId = (@PlayerDBId) AND ItemTileGridPositionX = (@ItemTileGridPositionX) AND ItemTileGridPositionY = (@ItemTileGridPositionY)
      ]]>
    </Body>    
  </Procedure>
	
  <!-- 인벤토리 테이블에 있는 아이템 가지고 옴-->
  <Procedure name="spGetItemTableInfoToInventory">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT ItemRotated, ItemWidth, ItemHeight,
		ItemLargeCategory, ItemMediumCategory, ItemSmallCategory, ItemName, MinDamage, MaxDamage, Defence, MaxCount, ItemCount, ItemTileGridPositionX, ItemTileGridPositionY, IsEquipped
        FROM [dbo].[Inventory]
        WHERE OwnerAccountDBId = (@AccountDBId) AND OwnerPlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure>
  
  <!-- 아이템 테이블에 있는 아이템 삭제 -->
  <Procedure name="spItemDelete">
    <Param name="@ItemDBId" type="BigInt"/>
    <Param name="@ItemUse" type="bit"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[Item] SET ItemUse = (@ItemUse)
        WHERE ItemDBId = (@ItemDBId)
      ]]>
    </Body>
  </Procedure>

  <!-- 인벤토리 아이템 초기화 -->
  <Procedure name="spInventorySlotInit">
    <Param name="@OwnerAccountDBId" type="BigInt"/>
    <Param name="@OwnerPlayerDBId" type="BigInt"/>
	<Param name="@ItemTileGridPositionX" type="SmallInt"/>
	<Param name="@ItemTileGridPositionY" type="SmallInt"/>    
    <Param name="@InitItemName" type="nvarchar(20)"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[Inventory]
        SET ItemRotated = 0, ItemWidth = 0, ItemHeight = 0,		
		ItemLargeCategory = 0, ItemMediumCategory = 0, ItemSmallCategory = 0,
		ItemName = (@InitItemName),
		ItemCount = 0,
		IsEquipped = 0, 
		MinDamage = 0, MaxDamage = 0, Defence = 0, MaxCount = 0		
        WHERE ItemTileGridPositionX = (@ItemTileGridPositionX) AND ItemTileGridPositionY = (@ItemTileGridPositionY) AND OwnerAccountDBId = (@OwnerAccountDBId) AND OwnerPlayerDBId = (@OwnerPlayerDBId)
      ]]>
    </Body>
  </Procedure>
  
  <!-- 인벤토리 아이템 업데이트 -->
ㅇ  <Procedure name="spInventoryItemUpdate">
    <Param name="@OwnerAccountDBId" type="BigInt"/>
    <Param name="@OwnerPlayerDBId" type="BigInt"/>    
	<Param name="@ItemRotated" type="bit"/>
	<Param name="@ItemTileGridPositionX" type="SmallInt"/>
	<Param name="@ItemTileGridPositionY" type="SmallInt"/>
    <Param name="@ItemCount" type="SmallInt"/>
    <Param name="@IsEquipped" type="bit"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[Inventory]
		SET ItemRotated = (@ItemRotated),
		ItemTileGridPositionX = (@ItemTileGridPositionX),
		ItemTileGridPositionY = (@ItemTileGridPositionY),
		ItemCount = (@ItemCount),
		IsEquipped = (@IsEquipped)
		WHERE OwnerAccountDBId = (@OwnerAccountDBId) AND OwnerPlayerDBId = (@OwnerPlayerDBId) And ItemTileGridPositionX = (@ItemTileGridPositionX) AND ItemTileGridPositionY = (@ItemTileGridPositionY)
      ]]>
    </Body>
  </Procedure>
	
  <!-- 인벤토리 아이템 놓기 -->
	<Procedure name="spInventoryItemPlace">
	<Param name="@OwnerAccountDBId" type="BigInt"/>
	<Param name="@OwnerPlayerDBId" type="BigInt"/>
	<Param name="@IsQuickSlotUse" type="bit"/>
	<Param name="@ItemRotated" type="bit"/>
	<Param name="@ItemWidth" type="SmallInt"/>
	<Param name="@ItemHeight" type="SmallInt"/>
	<Param name="@ItemTileGridPositionX" type="SmallInt"/>
	<Param name="@ItemTileGridPositionY" type="SmallInt"/>
	<Param name="@ItemLargeCategory" type="TinyInt" notnull="true"/>
	<Param name="@ItemMediumCategory" type="TinyInt" notnull="true"/>
	<Param name="@ItemSmallCategory" type="SmallInt"/>
	<Param name="@ItemName" type="nvarchar(20)"/>
	<Param name="@ItemCount" type="SmallInt"/>
	<Param name="@IsEquipped" type="bit"/>
	<Param name="@MinDamage" type="int"/>
	<Param name="@MaxDamage" type="int"/>
	<Param name="@Defence" type="int"/>
	<Param name="@MaxCount" type="int"/>			
	<Body>
	  <![CDATA[
		SET NOCOUNT ON
		UPDATE [dbo].[Inventory]
		SET IsQuickSlotUse = (@IsQuickSlotUse),
		ItemRotated = (@ItemRotated),
		ItemWidth = (@ItemWidth), ItemHeight = (@ItemHeight),
		ItemLargeCategory = (@ItemLargeCategory), ItemMediumCategory = (@ItemMediumCategory), ItemSmallCategory = (@ItemSmallCategory),
		ItemName = (@ItemName), ItemCount = (@ItemCount), IsEquipped = (@IsEquipped), MinDamage = (@MinDamage), MaxDamage = (@MaxDamage), Defence = (@Defence), MaxCount = (@MaxCount)
		WHERE OwnerAccountDBId = (@OwnerAccountDBId) AND OwnerPlayerDBId = (@OwnerPlayerDBId) And ItemTileGridPositionX = (@ItemTileGridPositionX) AND ItemTileGridPositionY = (@ItemTileGridPositionY)
		]]>
	</Body>	
 </Procedure>
  
  <!-- 스킬 테이블에 있는 스킬 가지고 오기 -->
  <Procedure name="spGetSkill">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT IsSkillLearn ,IsQuickSlotUse, SkillLargeCategory, SkillMediumCategory, SkillType, SkillLevel
        FROM [dbo].[Skill]
        WHERE AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure>  
    
  <!-- 스킬 테이블에 새로운 스킬 넣기 -->
  <Procedure name="spSkillToSkillBox">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
	<Param name="@IsSkillLearn" type="Bit"/>
    <Param name="@IsQuickSlotUse" type="Bit"/>
    <Param name="@SkillLargeCategory" type="TinyInt"/>
    <Param name="@SkillMediumCategory" type="TinyInt"/>
    <Param name="@SkillType" type="SmallInt"/>    
    <Param name="@SkillLevel" type="TinyInt"/>        
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        INSERT INTO [dbo].[Skill] VALUES ((@AccountDBId), (@PlayerDBId), (@IsSkillLearn), (@IsQuickSlotUse), (@SkillLargeCategory), (@SkillMediumCategory), (@SkillType), (@SkillLevel))
      ]]>
    </Body>
  </Procedure> 
	
  <!-- 퀵슬롯바 테이블에 새로운 퀵슬롯바 슬롯 생성 -->
  <Procedure name="spQuickSlotBarSlotCreate">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Param name="@QuickSlotBarIndex" type="TinyInt"/>
    <Param name="@QuickSlotBarSlotIndex" type="TinyInt"/>
    <Param name="@QuickSlotKey" type="SmallInt"/>
    <Param name="@SkillLargeCategory" type="TinyInt"/>
    <Param name="@SkillMediumCategory" type="TinyInt"/>
    <Param name="@SkillType" type="SmallInt"/>
    <Param name="@SkillLevel" type="TinyInt"/>    
    <Body>
      <![CDATA[   
	    SET NOCOUNT ON
        INSERT INTO [dbo].[QuickSlotBar] VALUES ((@AccountDBId), (@PlayerDBId), (@QuickSlotBarIndex), (@QuickSlotBarSlotIndex), (@QuickSlotKey), (@SkillLargeCategory), (@SkillMediumCategory), (@SkillType), (@SkillLevel))
      ]]>
    </Body>   
  </Procedure>

  <!-- 퀵슬롯바 테이블에 새로운 퀵슬롯바 슬롯 저장 -->
  <Procedure name="spQuickSlotBarSlotUpdate">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Param name="@QuickSlotBarIndex" type="TinyInt"/>
    <Param name="@QuickSlotBarSlotIndex" type="TinyInt"/>
    <Param name="@QuickSlotKey" type="SmallInt"/>
    <Param name="@SkillLargeCategory" type="TinyInt"/>
    <Param name="@SkillMediumCategory" type="TinyInt"/>
    <Param name="@SkillType" type="SmallInt"/>
    <Param name="@SkillLevel" type="TinyInt"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[QuickSlotBar] SET QuickSlotKey = (@QuickSlotKey), SkillLargeCategory = (@SkillLargeCategory), SkillMediumCategory = (@SkillMediumCategory), SkillType = (@SkillType), SkillLevel = (@SkillLevel)
        WHERE QuickSlotBarIndex = (@QuickSlotBarIndex) AND QuickSlotBarSlotIndex = (@QuickSlotBarSlotIndex) AND AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure>
  
  <!-- 퀵슬롯바 테이블에 있는 퀵슬롯 정보 가져오기 -->
  <Procedure name="spGetQuickSlotBarSlot">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT QuickSlotBarIndex, QuickSlotBarSlotIndex, QuickSlotKey, SkillLargeCategory, SkillMediumCategory, SkillType, SkillLevel
        FROM [dbo].[QuickSlotBar]
        WHERE AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure>

  <!-- 퀵슬롯바 테이블에 퀵슬롯이 있는지 확인하기 -->
  <Procedure name="spQuickSlotCheck">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Param name="@QuickSlotBarIndex" type="TinyInt"/>
    <Param name="@QuickSlotBarSlotIndex" type="TinyInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        SELECT QuickSlotKey, SkillLargeCategory, SkillMediumCategory, SkillType, SkillLevel
        FROM [dbo].[QuickSlotBar]
        WHERE AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId) AND QuickSlotBarIndex = (@QuickSlotBarIndex) AND QuickSlotBarSlotIndex = (@QuickSlotBarSlotIndex)
      ]]>
    </Body>
  </Procedure>
  
  <!-- 퀵슬롯바 테이블에서 퀵슬롯바 슬롯 스왑 -->
  <Procedure name="spQuickSlotSwap">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Param name="@AQuickSlotBarIndex" type="TinyInt"/>
    <Param name="@AQuickSlotBarSlotIndex" type="TinyInt"/>
    <Param name="@ASkillLargeCategory" type="TinyInt"/>    
    <Param name="@ASkillMediumCategory" type="TinyInt"/>
    <Param name="@AQuickSlotSkillType" type="SmallInt"/>
    <Param name="@AQuickSlotSkillLevel" type="TinyInt"/>     
    
    <Param name="@BQuickSlotBarIndex" type="TinyInt"/>
    <Param name="@BQuickSlotBarSlotIndex" type="TinyInt"/>
    <Param name="@BSkillLargeCategory" type="TinyInt"/>
    <Param name="@BSkillMediumCategory" type="TinyInt"/>
    <Param name="@BQuickSlotSkillType" type="SmallInt"/>
    <Param name="@BQuickSlotSkillLevel" type="TinyInt"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[QuickSlotBar] SET SkillLargeCategory = (@ASkillLargeCategory), SkillMediumCategory = (@ASkillMediumCategory), SkillType = (@AQuickSlotSkillType), SkillLevel = (@AQuickSlotSkillLevel) WHERE QuickSlotBarIndex = (@AQuickSlotBarIndex) AND QuickSlotBarSlotIndex = (@AQuickSlotBarSlotIndex) AND AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
        UPDATE [dbo].[QuickSlotBar] SET SkillLargeCategory = (@BSkillLargeCategory), SkillMediumCategory = (@BSkillMediumCategory), SkillType = (@BQuickSlotSkillType), SkillLevel = (@BQuickSlotSkillLevel) WHERE QuickSlotBarIndex = (@BQuickSlotBarIndex) AND QuickSlotBarSlotIndex = (@BQuickSlotBarSlotIndex) AND AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure>

  <!-- 퀵슬롯바 테이블에서 퀵슬롯바 슬롯 초기화-->
  <Procedure name="spQuickSlotInit">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>
    <Param name="@QuickSlotBarIndex" type="TinyInt"/>
    <Param name="@QuickSlotBarSlotIndex" type="TinyInt"/>    
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[QuickSlotBar]
        SET SkillLargeCategory = 0, SkillMediumCategory = 0, SkillType = 0, SkillLevel = 0
        WHERE QuickSlotBarIndex = (@QuickSlotBarIndex) AND QuickSlotBarSlotIndex = (@QuickSlotBarSlotIndex) AND AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure> 
  
  <!-- 접속 종료시 플레이어 정보 DB에 기록 -->
  <Procedure name="spPlayerLeaveInfoSave">
    <Param name="@AccountDBId" type="BigInt"/>
    <Param name="@PlayerDBId" type="BigInt"/>    
    <Param name="@Level" type="Int"/>
    <Param name="@MaxHP" type="Int"/>
    <Param name="@MaxMP" type="Int"/>
    <Param name="@MaxDP" type="Int"/>    
    <Param name="@AutoRecoveryHPPercent" type="SmallInt"/>
    <Param name="@AutoRecoveryMPPercent" type="SmallInt"/>
    <Param name="@MinMeleeAttackDamage" type="int"/>
    <Param name="@MaxMeleeAttackDamage" type="int"/>
    <Param name="@MeleeAttackHitRate" type="SmallInt"/>
    <Param name="@MagicDamage" type="SmallInt"/>
    <Param name="@MagicHitRate" type="float"/>
    <Param name="@Defence" type="int"/>
    <Param name="@EvasionRate" type="SmallInt"/>
    <Param name="@MeleeCriticalPoint" type="SmallInt"/>
    <Param name="@MagicCriticalPoint" type="SmallInt"/>    
    <Param name="@Speed" type="float"/>
    <Param name="@LastPositionY" type="Int"/>
    <Param name="@LastPositionX" type="Int"/>
    <Param name="@CurrentExperience" type="BigInt"/>
    <Param name="@RequireExperience" type="BigInt"/>
    <Param name="@TotalExperience" type="BigInt"/>
    <Body>
      <![CDATA[
	    SET NOCOUNT ON
        UPDATE [dbo].[Player]
        SET Level = (@Level),
        MaxHP = (@MaxHP),
        MaxMP = (@MaxMP),
        AutoRecoveryHPPercent = (@AutoRecoveryHPPercent),
        AutoRecoveryMPPercent = (@AutoRecoveryMPPercent),
        MinMeleeAttackDamage = (@MinMeleeAttackDamage),
        MaxMeleeAttackDamage = (@MaxMeleeAttackDamage),
        MeleeAttackHitRate = (@MeleeAttackHitRate),
        MagicDamage = (@MagicDamage),
        MagicHitRate = (@MagicHitRate),
        Defence = (@Defence),
        EvasionRate = (@EvasionRate),
        MeleeCriticalPoint = (@MeleeCriticalPoint),
        MagicCriticalPoint = (@MagicCriticalPoint),
        Speed = (@Speed),
        LastPositionY = (@LastPositionY), 
        LastPositionX = (@LastPositionX),
        CurrentExperience = (@CurrentExperience),
        RequireExperience = (@RequireExperience),
        TotalExperience = (@TotalExperience)
        WHERE AccountDBId = (@AccountDBId) AND PlayerDBId = (@PlayerDBId)
      ]]>
    </Body>
  </Procedure>

  <!--토큰 정보 있는지 확인 -->
  <Procedure name="spIsToken">
	  <Param name="@AccountDBId" type="BigInt"/>
	  <Body>
		  <![CDATA[
			SET NOCOUNT ON
			SELECT TokenCreateTime, Token
			FROM [dbo].[Token]
			WHERE AccountDBId = (@AccountDBId)
		  ]]>
	  </Body>
  </Procedure>
</GameServerDB>
